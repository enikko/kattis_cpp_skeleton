#!/bin/bash

# This program instantiates a new problem in the project sturcture. This includes:
#    * Creating the appropriate folders in the src/problems folder.
#    * Instantiate a skeleton for the problem
#    * Try to fetch tests for the problem and store them in its test folder.
#
# Usage:
# new_problem PROBLEM_ID
# where:
#    PROBLEM_ID - The kattis id of the problem.
#
# Author: Erik Nikko <65210465+enikko@users.noreply.github.com>

# MIT License
#
# Copyright (c) 2022 Erik Nikko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

problem_id=$1

root=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && cd .. && pwd )
problem_folder="${root}/src/problems/${problem_id}"
test_folder="${problem_folder}/tests"

if [ -d "$problem_folder" ]; then
    echo "Problem folder already exists"
    exit 1
fi


mkdir -p "${problem_folder}"
mkdir -p "${test_folder}"
${root}/bin/instantiate_skeleton problem $root $problem_id
${root}/bin/fetch_tests $test_folder $problem_id
